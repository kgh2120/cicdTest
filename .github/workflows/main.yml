name: CI/CD Docker

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/trading
  VERSION: ${{ github.sha }}
  NAME: go_cicd

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
        
        
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
        
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: show directory
        run: ls
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: . 			# dockerfile이 있는 위치랑 맞춰주자
          file: ./Dockerfile	# 빌드할 Dockerfile이 있는 디렉토리
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
          
      - name: Slack Notify
        if: failure()
        uses: rtCamp/action-slack-notify@v2.1.0
        env:
          SLACK_CHANNEL: group-dev
          SLACK_COLOR: '#FF2D00'
          SLACK_USERNAME: 'Github Action'
          SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          SLACK_TITLE: Build Failure - ${{ github.event.pull_request.title }}
          SLACK_MESSAGE: PR Url - ${{ github.event.pull_request.url }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, cicd ]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker run
        run: |
          docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 8080:8080 --name go_cicd --restart always ${{ env.DOCKER_IMAGE }}:latest
